% TODO
@inproceedings{bitingoff_ghosh_2012,
  author       = {Rahul Ghosh and
                  Vijay K. Naik},
  editor       = {Rong Chang},
  title        = {{Biting Off Safely More Than You Can Chew: Predictive Analytics for
                  Resource Over-Commit in IaaS Cloud}},
  booktitle    = {{IEEE Cloud 2012}},
  pages        = {25--32},
  publisher    = {{IEEE} Computer Society},
  year         = {2012},
  doi          = {10.1109/CLOUD.2012.131},
}
@inproceedings {yuFollowingDataNot,
author = {Minchen Yu and Tingjia Cao and Wei Wang and Ruichuan Chen},
title = {{Following the Data, Not the Function: Rethinking Function Orchestration in Serverless Computing}},
booktitle = {{NSDI'23}},
year = {2023},
isbn = {978-1-939133-33-5},
address = {Boston, MA},
pages = {1489--1504},
publisher = {USENIX Association},
month = apr
}
@article{masanet2020recalibrating,
  title={{Recalibrating global data center energy-use estimates}},
  author={Masanet, Eric and Shehabi, Arman and Lei, Nuoa and Smith, Sarah and Koomey, Jonathan},
  journal={Science},
  volume={367},
  number={6481},
  pages={984--986},
  year={2020},
  publisher={American Association for the Advancement of Science}
}
@INPROCEEDINGS{dartois18,
  author={Dartois, Jean-Emile and Knefati, Anas and Boukhobza, Jalil and Barais, Olivier},
  booktitle={{CloudCom'18}}, 
  title={{Using Quantile Regression for Reclaiming Unused Cloud Resources While Achieving SLA}}, 
  year={2018},
  volume={},
  number={},
  pages={89-98},
  keywords={Data centers;Random access memory;Companies;Estimation;Cloud computing;Measurement;Quality of service;Machine learning resource usage prediction performance model},
  doi={10.1109/CloudCom2018.2018.00030}}

% Ajouts SimPy

@article{matloffIntroductionDiscreteEventSimulation,
  title = {Introduction to {{Discrete-Event Simulation}} and the {{SimPy Language}}},
  author = {Matloff, Norm},
  journal={Davis, CA. Dept of Computer Science. University of California at Davis. Retrieved on August},
  volume={2},
  number={2009},
  pages={1--33},
  year={2008},
  langid = {english},
}

@misc{zinovievDiscreteEventSimulation2024a,
  title = {Discrete {{Event Simulation}}: {{It}}'s {{Easy}} with {{SimPy}}!},
  shorttitle = {Discrete {{Event Simulation}}},
  author = {Zinoviev, Dmitry},
  year = {2024},
  month = apr,
  number = {arXiv:2405.01562},
  eprint = {2405.01562},
  primaryclass = {cs},
  publisher = {arXiv},
  urldate = {2024-09-16},
  abstract = {This paper introduces the practicalities and benefits of using SimPy, a discrete event simulation (DES) module written in Python, for modeling and simulating complex systems. Through a step-by-step exploration of the classical Dining Philosophers Problem, we demonstrate how SimPy enables the efficient construction of discrete event models, emphasizing system states, transitions, and event handling. We extend the scenario to introduce resources, such as chopsticks, to model contention and deadlock conditions, and showcase SimPy's capabilities in managing these scenarios. Furthermore, we explore the integration of SimPy with other Python libraries for statistical analysis, showcasing how simulation results inform system design and optimization. The versatility of SimPy is further highlighted through additional modeling scenarios, including resource constraints and customer service interactions, providing insights into the process of building, debugging, simulating, and optimizing models for a wide range of applications. This paper aims to make DES accessible to practitioners and researchers alike, emphasizing the ease with which complex simulations can be constructed, analyzed, and visualized using SimPy and the broader Python ecosystem.},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Computer Science - Mathematical Software,Computer Science - Multiagent Systems},
}

% Ajouts simulation (survey)

@article{bambrikSurveyCloudComputing2020,
  title = {A {{Survey}} on {{Cloud Computing Simulation}} and {{Modeling}}},
  author = {Bambrik, Ilyas},
  year = {2020},
  month = sep,
  journal = {SN Computer Science},
  volume = {1},
  number = {5},
  pages = {249},
  issn = {2662-995X, 2661-8907},
  doi = {10.1007/s42979-020-00273-1},
  urldate = {2024-07-02},
  abstract = {Cloud Computing (CC) has attracted a massive amount of research and investment in the previous decade. The economical model proposed by this technology is a viable solution for consumers as well as being a profitable one for the provider. However, deploying real world cloud experiments to test new policies/algorithms is time consuming and very expensive, especially for large scenarios. As a result, the research community has opted to test their contributions is CC simulators. Although the models proposed by these simulators are not exhaustive, each one is made to address a specific process. Alternatively, others tools are made to provide a platform and the necessary building blocks to model any desired sub-component (application/ network model, energy consumption, scheduling and Virtual Machine provisioning). In this paper, a detailed survey about the existing CC simulators is made discussing features, software architecture as well as the ingenuity behind these frameworks.},
  langid = {english},
}
@inproceedings{byrneReviewCloudComputing2017,
  title = {A {{Review}} of {{Cloud Computing Simulation Platforms}} and {{Related Environments}}:},
  shorttitle = {A {{Review}} of {{Cloud Computing Simulation Platforms}} and {{Related Environments}}},
  booktitle = {Proceedings of the 7th {{International Conference}} on {{Cloud Computing}} and {{Services Science}}},
  author = {Byrne, James and Svorobej, Sergej and Giannoutakis, Konstantinos M. and Tzovaras, Dimitrios and Byrne, P. J. and {\"O}stberg, Per-Olov and Gourinovitch, Anna and Lynn, Theo},
  year = {2017},
  pages = {679--691},
  publisher = {{SCITEPRESS - Science and Technology Publications}},
  address = {Porto, Portugal},
  doi = {10.5220/0006373006790691},
  urldate = {2024-07-02},
  abstract = {Cloud Computing, Cloud Simulation Tools, Data Centre, Fog Computing.},
  isbn = {978-989-758-243-1},
  langid = {english},
}

% SotA %
@inproceedings{wickremasinghe_cloudanalyst_2010,
  title        = {{CloudAnalyst: A CloudSim-Based Visual Modeller for Analysing Cloud Computing Environments and Applications}},
  shorttitle   = {{CloudAnalyst}},
  author       = {Wickremasinghe, Bhathiya and Calheiros, Rodrigo N. and Buyya, Rajkumar},
  year         = 2010,
  month        = apr,
  booktitle    = {{IEEE AINA 2010}},
  pages        = {446--452},
  doi          = {10.1109/AINA.2010.32},
  urldate      = {2023-12-11},
  note         = {ISSN: 2332-5658},
  abstract     = {Advances in Cloud computing opens up many new possibilities for Internet applications developers. Previously, a main concern of Internet applications developers was deployment and hosting of applications, because it required acquisition of a server with a fixed capacity able to handle the expected application peak demand and the installation and maintenance of the whole software infrastructure of the platform supporting the application. Furthermore, server was underutilized because peak traffic happens only at specific times. With the advent of the Cloud, deployment and hosting became cheaper and easier with the use of pay-peruse flexible elastic infrastructure services offered by Cloud providers. Because several Cloud providers are available, each one offering different pricing models and located in different geographic regions, a new concern of application developers is selecting providers and data center locations for applications. However, there is a lack of tools that enable developers to evaluate requirements of large-scale Cloud applications in terms of geographic distribution of both computing servers and user workloads. To fill this gap in tools for evaluation and modeling of Cloud environments and applications, we propose CloudAnalyst. It was developed to simulate large-scale Cloud applications with the purpose of studying the behavior of such applications under various deployment configurations. CloudAnalyst helps developers with insights in how to distribute applications among Cloud infrastructures and value added services such as optimization of applications performance and providers incoming with the use of Service Brokers.}
}
@article{calheiros_cloudsim_2011,
  title        = {{CloudSim: a toolkit for modeling and simulation of cloud computing environments and evaluation of resource provisioning algorithms}},
  shorttitle   = {{CloudSim}},
  author       = {Calheiros, Rodrigo N. and Ranjan, Rajiv and Beloglazov, Anton and De Rose, César A. F. and Buyya, Rajkumar},
  year         = 2011,
  journal      = {Software: Practice and Experience},
  volume       = 41,
  number       = 1,
  pages        = {23--50},
  doi          = {10.1002/spe.995},
  issn         = {1097-024X},
  urldate      = {2023-12-11},
  copyright    = {Copyright © 2010 John Wiley \& Sons, Ltd.},
  note         = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.995},
  abstract     = {Cloud computing is a recent advancement wherein IT infrastructure and applications are provided as ‘services’ to end-users under a usage-based payment model. It can leverage virtualized services even on the fly based on requirements (workload patterns and QoS) varying with time. The application services hosted under Cloud computing model have complex provisioning, composition, configuration, and deployment requirements. Evaluating the performance of Cloud provisioning policies, application workload models, and resources performance models in a repeatable manner under varying system and user configurations and requirements is difficult to achieve. To overcome this challenge, we propose CloudSim: an extensible simulation toolkit that enables modeling and simulation of Cloud computing systems and application provisioning environments. The CloudSim toolkit supports both system and behavior modeling of Cloud system components such as data centers, virtual machines (VMs) and resource provisioning policies. It implements generic application provisioning techniques that can be extended with ease and limited effort. Currently, it supports modeling and simulation of Cloud computing environments consisting of both single and inter-networked clouds (federation of clouds). Moreover, it exposes custom interfaces for implementing policies and provisioning techniques for allocation of VMs under inter-networked Cloud computing scenarios. Several researchers from organizations, such as HP Labs in U.S.A., are using CloudSim in their investigation on Cloud resource provisioning and energy-efficient management of data center resources. The usefulness of CloudSim is demonstrated by a case study involving dynamic provisioning of application services in the hybrid federated clouds environment. The result of this case study proves that the federated Cloud computing model significantly improves the application QoS requirements under fluctuating resource and service demand patterns. Copyright © 2010 John Wiley \& Sons, Ltd.},
  language     = {en},
  keywords     = {Cloud computing, performance evaluation, application scheduling, modelling and simulation, resource management, LU}
}
@misc{mampage_cloudsimsc_2023,
  title        = {{CloudSimSC: A Toolkit for Modeling and Simulation of Serverless Computing Environments}},
  author       = {Mampage, Anupama and Buyya, Rajkumar},
  year         = 2023,
  month        = sep,
  publisher    = {arXiv},
  copyright    = {http://arxiv.org/licenses/nonexclusive-distrib/1.0/},
  abstract     = {Serverless computing is gaining traction as an attractive model for the deployment of a multitude of workloads in the cloud. Designing and building effective resource management solutions for any computing environment requires extensive long term testing, experimentation and analysis of the achieved performance metrics. Utilizing real test beds and serverless platforms for such experimentation work is often times not possible due to resource, time and cost constraints. Thus, employing simulators to model these environments is key to overcoming the challenge of examining the viability of such novel ideas for resource management. Existing simulation software developed for serverless environments lack generalizibility in terms of their architecture as well as the various aspects of resource management, where most are purely focused on modeling function performance under a specific platform architecture. In contrast, we have developed a serverless simulation model with induced flexibility in its architecture as well as the key resource management aspects of function scheduling and scaling. Further, we incorporate techniques for easily deriving monitoring metrics required for evaluating any implemented solutions by users. Our work is presented as CloudSimSC, a modular extension to CloudSim which is a simulator tool extensively used for modeling cloud environments by the research community. We discuss the implemented features in our simulation tool using multiple use cases.},
  archiveprefix = {arXiv},
  primaryclass = {cs.DC},
  eprint       = {2309.10671}
}
@article{cai_elasticsim_2017,
  title        = {{ElasticSim: A Toolkit for Simulating Workflows with Cloud Resource Runtime Auto-Scaling and Stochastic Task Execution Times}},
  shorttitle   = {{ElasticSim}},
  author       = {Cai, Zhicheng and Li, Qianmu and Li, Xiaoping},
  year         = 2017,
  month        = jun,
  journal      = {Journal of Grid Computing},
  volume       = 15,
  number       = 2,
  pages        = {257--272},
  doi          = {10.1007/s10723-016-9390-y},
  issn         = {1572-9184},
  urldate      = {2023-12-14},
  abstract     = {Resource provisioning and scheduling are crucial for cloud workflow applications. Simulation is one of the most promising evaluation methods for different resource provisioning and scheduling algorithms. However, existing simulators for Cloud workflow applications fail to provide support for resource runtime auto-scaling and stochastic task execution time modeling. In this paper, a workflow simulator ElasticSim is introduced, which is an extension of the popular used CloudSim simulator by adding support for resource runtime auto-scaling and stochastic task execution time modeling. Most of existing workflow scheduling algorithms are static and are based on deterministic task execution times. By the aid of ElasticSim, the practical performance of existing static algorithms, when they are put into practice with stochastic task execution times, is evaluated. Experimental results show that about 2.8 \% to 20 \% additional resource rental cost is incurred for different cases and workflow deadlines are violated for most cases because of stochastic task execution times. Therefore, ElasticSim is a promising platform for evaluating the practical performance of workflow resource provisioning and scheduling algorithms, which supports resource runtime auto-scaling and stochastic task execution time modeling.},
  language     = {en},
  keywords     = {Cloud computing, Auto-scaling, Simulator, Stochastic execution time, Workflow scheduling}
}
@article{nunez_icancloud_2012,
  title        = {{iCanCloud: A Flexible and Scalable Cloud Infrastructure Simulator}},
  shorttitle   = {{iCanCloud}},
  author       = {Núñez, Alberto and Vázquez-Poletti, Jose L. and Caminero, Agustin C. and Castañé, Gabriel G. and Carretero, Jesus and Llorente, Ignacio M.},
  year         = 2012,
  month        = mar,
  journal      = {Journal of Grid Computing},
  volume       = 10,
  number       = 1,
  pages        = {185--209},
  doi          = {10.1007/s10723-012-9208-5},
  issn         = {1572-9184},
  urldate      = {2023-12-10},
  abstract     = {Simulation techniques have become a powerful tool for deciding the best starting conditions on pay-as-you-go scenarios. This is the case of public cloud infrastructures, where a given number and type of virtual machines (in short VMs) are instantiated during a specified time, being this reflected in the final budget. With this in mind, this paper introduces and validates iCanCloud, a novel simulator of cloud infrastructures with remarkable features such as flexibility, scalability, performance and usability. Furthermore, the iCanCloud simulator has been built on the following design principles: (1) it’s targeted to conduct large experiments, as opposed to others simulators from literature; (2) it provides a flexible and fully customizable global hypervisor for integrating any cloud brokering policy; (3) it reproduces the instance types provided by a given cloud infrastructure; and finally, (4) it contains a user-friendly GUI for configuring and launching simulations, that goes from a single VM to large cloud computing systems composed of thousands of machines.},
  language     = {en},
  keywords     = {Cloud computing, Cloud computing simulator, Cloud hypervisor, Scalability, Validation}
}
@article{gupta_ifogsim_2017,
  title        = {{iFogSim: A toolkit for modeling and simulation of resource management techniques in the Internet of Things, Edge and Fog computing environments}},
  shorttitle   = {{iFogSim}},
  author       = {Gupta, Harshit and Vahid Dastjerdi, Amir and Ghosh, Soumya K. and Buyya, Rajkumar},
  year         = 2017,
  journal      = {Software: Practice and Experience},
  volume       = 47,
  number       = 9,
  pages        = {1275--1296},
  doi          = {10.1002/spe.2509},
  issn         = {1097-024X},
  urldate      = {2024-03-01},
  copyright    = {Copyright © 2017 John Wiley \& Sons, Ltd.},
  note         = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2509},
  abstract     = {Internet of Things (IoT) aims to bring every object (eg, smart cameras, wearable, environmental sensors, home appliances, and vehicles) online, hence generating massive volume of data that can overwhelm storage systems and data analytics applications. Cloud computing offers services at the infrastructure level that can scale to IoT storage and processing requirements. However, there are applications such as health monitoring and emergency response that require low latency, and delay that is caused by transferring data to the cloud and then back to the application can seriously impact their performances. To overcome this limitation, Fog computing paradigm has been proposed, where cloud services are extended to the edge of the network to decrease the latency and network congestion. To realize the full potential of Fog and IoT paradigms for real-time analytics, several challenges need to be addressed. The first and most critical problem is designing resource management techniques that determine which modules of analytics applications are pushed to each edge device to minimize the latency and maximize the throughput. To this end, we need an evaluation platform that enables the quantification of performance of resource management policies on an IoT or Fog computing infrastructure in a repeatable manner. In this paper we propose a simulator, called iFogSim, to model IoT and Fog environments and measure the impact of resource management techniques in latency, network congestion, energy consumption, and cost. We describe two case studies to demonstrate modeling of an IoT environment and comparison of resource management policies. Moreover, scalability of the simulation toolkit of RAM consumption and execution time is verified under different circumstances.},
  language     = {en},
  keywords     = {Edge computing, Fog computing, Internet of Things (IoT), modeling and simulation}
}
@misc{mahmudIFogSim2ExtendedIFogSim2021,
  title        = {{{IFogSim2}}: {{An Extended iFogSim Simulator}} for {{Mobility}}, {{Clustering}}, and {{Microservice Management}} in {{Edge}} and {{Fog Computing Environments}}},
  shorttitle   = {{{IFogSim2}}},
  author       = {Mahmud, Redowan and Pallewatta, Samodha and Goudarzi, Mohammad and Buyya, Rajkumar},
  year         = 2021,
  month        = sep,
  publisher    = {arXiv},
  number       = {arXiv:2109.05636},
  urldate      = {2024-04-24},
  eprint       = {2109.05636},
  primaryclass = {cs},
  abstract     = {Internet of Things (IoT) has already proven to be the building block for next-generation Cyber-Physical Systems (CPSs). The considerable amount of data generated by the IoT devices needs latency-sensitive processing, which is not feasible by deploying the respective applications in remote Cloud datacentres. Edge/Fog computing, a promising extension of Cloud at the IoT-proximate network, can meet such requirements for smart CPSs. However, the structural and operational differences of Edge/Fog infrastructure resist employing Cloud-based service regulations directly to these environments. As a result, many research works have been recently conducted, focusing on efficient application and resource management in Edge/Fog computing environments. Scalable Edge/Fog infrastructure is a must to validate these policies, which is also challenging to accommodate in the real-world due to high cost and implementation time. Considering simulation as a key to this constraint, various software has been developed that can imitate the physical behaviour of Edge/Fog computing environments. Nevertheless, the existing simulators often fail to support advanced service management features because of their monolithic architecture, lack of actual dataset, and limited scope for a periodic update. To overcome these issues, we have developed multiple simulation models for service migration, dynamic distributed cluster formation, and microservice orchestration for Edge/Fog computing in this work and integrated with the existing iFogSim simulation toolkit for launching it as iFogSim2. The performance of iFogSim2 and its built-in policies are evaluated using three use case scenarios and compared with the contemporary simulators and benchmark policies under different settings. Results indicate that the proposed solution outperform others in service management time, network usage, ram consumption, and simulation time.},
  archiveprefix = {arxiv},
  langid       = {english},
  keywords     = {Computer Science - Distributed Parallel and Cluster Computing,Computer Science - Performance,Computer Science - Software Engineering},
  file         = {C:\Users\vlannurien\Zotero\storage\EYXZK99Q\Mahmud et al. - 2021 - IFogSim2 An Extended iFogSim Simulator for Mobili.pdf}
}
@article{buyyaGridSimToolkitModeling2002,
  title        = {{GridSim: A Toolkit for the Modeling and Simulation of Distributed Resource Management and Scheduling for Grid Computing}},
  shorttitle   = {{{GridSim}}},
  author       = {Buyya, Rajkumar and Murshed, Manzur},
  year         = 2002,
  month        = nov,
  journal      = {Concurrency and Computation: Practice and Experience},
  volume       = 14,
  number       = {13-15},
  pages        = {1175--1220},
  doi          = {10.1002/cpe.710},
  issn         = {1532-0626, 1532-0634},
  urldate      = {2024-04-15},
  copyright    = {http://onlinelibrary.wiley.com/termsAndConditions\#vor},
  abstract     = {Clusters, grids, and peer-to-peer (P2P) networks have emerged as popular paradigms for next generation parallel and distributed computing. They enable aggregation of distributed resources for solving large-scale problems in science, engineering, and commerce. In grid and P2P computing environments, the resources are usually geographically distributed in multiple administrative domains, managed and owned by different organizations with different policies, and interconnected by wide-area networks or the Internet. This introduces a number of resource management and application scheduling challenges in the domain of security, resource and policy heterogeneity, fault tolerance, continuously changing resource conditions, and policies. The resource management and scheduling systems for grid computing need to manage resources and application execution depending on either resource consumers' or owners' requirements, and continuously adapt to changes in resource availability.},
  langid       = {english},
  file         = {C:\Users\vlannurien\Zotero\storage\Q6ANZPQW\Buyya et Murshed - 2002 - GridSim a toolkit for the modeling and simulation.pdf}
}
@inproceedings{casanovaSimgridToolkitSimulation2001,
  title        = {{Simgrid: A Toolkit for the Simulation of Application Scheduling}},
  shorttitle   = {Simgrid},
  author       = {Casanova, H.},
  year         = 2001,
  booktitle    = {{CCGrid'01}},
  publisher    = {IEEE Comput. Soc},
  address      = {Brisbane, Qld., Australia},
  pages        = {430--437},
  doi          = {10.1109/CCGRID.2001.923223},
  isbn         = {978-0-7695-1010-1},
  urldate      = {2024-04-15},
  abstract     = {Advances in hardware and software technologies have made it possible to deploy parallel applications over increasingly large sets of distributed resources. Consequently? the study of scheduling algorithms f o r such applications has been an active area of research. Given the nature of most scheduling problems one niust resort to siniulatioti to effectively evaluate and compare their efJicacy over a wide range of scenarios. It has thus become necessary to simulate those algorithms f o r increasingly complex distributed, dynamic, heterogeneous environments. I n this paper we present Simgrid, a simulation toolkit for the study of scheduling algorithms f o r distributed application. This paper gives the main concepts and models behind Simgrid, describes its API and highlights current implenientation issues. We also give some experimentul results and describe work that builds on Simgrid'sfunctionalities.},
  langid       = {english},
  file         = {C:\Users\vlannurien\Zotero\storage\XJRTXLA6\Casanova - 2001 - Simgrid a toolkit for the simulation of applicati.pdf}
}
@inproceedings{jeonCloudSimExtensionSimulatingDistributed2019,
  title        = {{A CloudSim-Extension for Simulating Distributed Functions-as-a-Service}},
  author       = {Jeon, Hongseok and Cho, Chunglae and Shin, Seungjae and Yoon, Seunghyun},
  year         = 2019,
  month        = dec,
  booktitle    = {{PDCAT'19}},
  publisher    = {IEEE},
  address      = {Gold Coast, Australia},
  pages        = {386--391},
  doi          = {10.1109/PDCAT46702.2019.00076},
  isbn         = {978-1-72812-616-6},
  urldate      = {2024-04-22},
  copyright    = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  abstract     = {The performance of Functions-as-a-Service (FaaS) would be significantly improved by organizing cloud servers into a hierarchical distributed architecture, resulting in low-latency access and faster response when compared to centralized cloud. However, the distributed organization introduces a new type of decision making problem for placing and executing functions to a specific cloud server. In order to handle the problem, we extended a well-known cloud computing simulator, CloudSim. The extended CloudSim enables users to define FaaS functions with various characteristics and service level objectives (SLOs), place them across geo-distributed cloud servers, and evaluate per-function performance. Proof-of-Concept (PoC) evaluation results show the potential of our CloudSim extension in terms of execution efficiency and simulation reality.},
  langid       = {english}
}
@inproceedings{mahmoudiSimFaaSPerformanceSimulator2021,
  title        = {{SimFaaS: A Performance Simulator for Serverless Computing Platforms}},
  shorttitle   = {{{SimFaaS}}},
  author       = {Mahmoudi, Nima and Khazaei, Hamzeh},
  year         = 2021,
  booktitle    = {{CLOSER'21}},
  publisher    = {Springer},
  pages        = {1--11},
  numpages     = {11},
  doi          = {10.5220/0010376500230033},
  isbn         = {978-989-758-510-4},
  langid       = {english},
  keywords     = {performance modelling, serverless computing, serverless, simulator, performance},
}
@inproceedings{mastenbroekOpenDCConvenientModeling2021,
  title        = {{OpenDC 2.0: Convenient Modeling and Simulation of Emerging Technologies in Cloud Datacenters}},
  shorttitle   = {{{OpenDC}} 2.0},
  author       = {Mastenbroek, Fabian and Andreadis, Georgios and Jounaid, Soufiane and Lai, Wenchen and Burley, Jacob and Bosch, Jaro and Van Eyk, Erwin and Versluis, Laurens and Van Beek, Vincent and Iosup, Alexandru},
  year         = 2021,
  month        = may,
  booktitle    = {{CCGrid'21}},
  publisher    = {IEEE},
  address      = {Melbourne, Australia},
  pages        = {455--464},
  doi          = {10.1109/CCGrid51090.2021.00055},
  isbn         = {978-1-72819-586-5},
  urldate      = {2024-04-22},
  copyright    = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  abstract     = {Cloud datacenters are important for the digital society, serving stakeholders across industry, government, and academia. Simulation is a critical part of exploring datacenter technologies, enabling scalable experimentation with millions of jobs and hundreds of thousands of machines, and what-if analysis in a matter of minutes to hours. Although the community has already developed powerful simulators, emerging technologies and applications in modern datacenters require new approaches. Addressing this requirement, in this work we propose OpenDC, a new platform for datacenter simulation. OpenDC includes novel models for emerging cloud-datacenter technologies and applications, such as serverless computing with FaaS deployment and TensorFlow-based machine learning. Our design also focuses on convenience, with a web-based interface for interactive experimentation, support for experiment automation, a library of prefabs for constructing and sharing datacenter designs, and support for diverse input formats and output metrics. We implement, validate, and open-source OpenDC 2.0, a significant redesign and release after a multi-year research and development process. We demonstrate the benefits of OpenDC for the field through a set of representative use-cases: serverless, machine learning, procurement of HPC-as-a-Service infrastructure, educational practices, and reproducibility studies. Overall, OpenDC helps understand how datacenters work, design datacenter infrastructure, and train the next generation of experts.},
  langid       = {english}
}
% Own work %
@inproceedings{herocache,
  title        = {{HeROcache: Storage-Aware Scheduling in Heterogeneous Serverless Edge -- The Case of IDS}},
  author       = {Lannurien, Vincent and Slimani, Camélia and D'Orazio, Laurent and Barais, Olivier and Paquelet, Stéphane and Boukhobza, Jalil},
  year         = 2024,
  booktitle    = {{CCGrid'24}}
}
% URLs %
@misc{herosim,
  title        = {{HeROsim: An Allocation and Placement Simulator for Evaluating Serverless Orchestration Policies}},
  author       = {Lannurien, Vincent},
  year         = 2024,
  month        = Feb,
  note         = {},
  swhid        = {swh:1:dir:25de7582f8eb4ac1c8e4f6547f13daedd95c89fb;origin=https://hal.archives-ouvertes.fr/hal-04468894;visit=swh:1:snp:f6e59382a8fcc7e6fbfe0828fcd11cf1b7d7395f;anchor=swh:1:rel:8d1f3395227f348fc47e438696cdae643674bf26;path=/},
  repository   = {https://github.com/b-com/HeROsim},
  license      = {Apache License 2.0},
  file         = {https://hal.science/hal-04468894/file/HeROsim-main.zip},
  hal_id       = {hal-04468894},
  hal_version  = {v1}
}
@online{wsl,
  title        = {{WSL2}},
  author       = {Microsoft},
  year         = 2024,
}